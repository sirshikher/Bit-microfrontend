{"version":3,"sources":["tree/Tree.jsx"],"names":["Tree","arguments","renderSwitcherIcon","prefixCls","switcherIcon","isLeaf","expanded","loading","icon","showLine","props","switcherCls","React","cloneElement","className","setTreeRef","node","tree","renderTree","getPrefixCls","customizePrefixCls","showIcon","blockNode","children","checkable","nodeProps","Component","TreeNode","DirectoryTree","defaultProps","motion","collapseMotion","motionAppear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nexport default class Tree extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSwitcherIcon = (prefixCls, switcherIcon, { isLeaf, expanded, loading, icon }) => {\n            const { showLine } = this.props;\n            if (loading) {\n                return <Icon type=\"loading\" className={`${prefixCls}-switcher-loading-icon`}/>;\n            }\n            if (isLeaf) {\n                if (showLine) {\n                    return icon || <Icon type=\"file\" className={`${prefixCls}-switcher-line-icon`}/>;\n                }\n                return null;\n            }\n            const switcherCls = `${prefixCls}-switcher-icon`;\n            if (switcherIcon) {\n                return React.cloneElement(switcherIcon, {\n                    className: classNames(switcherIcon.props.className || '', switcherCls),\n                });\n            }\n            if (showLine) {\n                return icon || (<Icon type={expanded ? 'minus-square' : 'plus-square'} className={`${prefixCls}-switcher-line-icon`} theme=\"outlined\"/>);\n            }\n            return <Icon type=\"caret-down\" className={switcherCls} theme=\"filled\"/>;\n        };\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.renderTree = ({ getPrefixCls }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, showIcon, showLine, switcherIcon, blockNode, children, } = props;\n            const { checkable } = props;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            return (<RcTree ref={this.setTreeRef} {...props} \n            // Hide icon in node when showLine is true, show icon in line always\n            // https://github.com/ant-design/ant-design/issues/20090\n            showIcon={showLine ? false : showIcon} prefixCls={prefixCls} className={classNames(className, {\n                [`${prefixCls}-icon-hide`]: !showIcon,\n                [`${prefixCls}-block-node`]: blockNode,\n            })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable} switcherIcon={(nodeProps) => this.renderSwitcherIcon(prefixCls, switcherIcon, nodeProps)}>\n        {children}\n      </RcTree>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTree}</ConfigConsumer>;\n    }\n}\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    checkable: false,\n    showIcon: false,\n    motion: Object.assign(Object.assign({}, collapseMotion), { motionAppear: false }),\n    blockNode: false,\n};\n"],"file":"Tree.js"}